!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e=e||self).WireService={})}(this,(function(e){"use strict";class t{constructor(e){this.type="ValueChangedEvent",this.value=e}}function n(e){return void 0===e}Symbol("x").toString();const{freeze:i,defineProperty:r,isExtensible:s}=Object;const{forEach:c,splice:a,indexOf:o}=Array.prototype;function d(e,t){const n=o.call(e,t);n>-1&&a.call(e,n,1)}class l{constructor(e){this.connecting=[],this.disconnecting=[],this.configuring=[],this.isFirstUpdate=!0,this.callback=e,this.wiredElementHost=e.$$DeprecatedWiredElementHostKey$$,this.dynamicParamsNames=e.$$DeprecatedWiredParamsMetaKey$$,this.eventTarget={addEventListener:(e,t)=>{switch(e){case"connect":this.connecting.push(t);break;case"disconnect":this.disconnecting.push(t);break;case"config":this.configuring.push(t),void 0!==this.currentConfig&&t.call(void 0,this.currentConfig);break;default:throw new Error(`Invalid event type ${e}.`)}},removeEventListener:(e,t)=>{switch(e){case"connect":d(this.connecting,t);break;case"disconnect":d(this.disconnecting,t);break;case"config":d(this.configuring,t);break;default:throw new Error(`Invalid event type ${e}.`)}},dispatchEvent:e=>{if(!(e instanceof t)){if("wirecontextevent"===e.type)return this.wiredElementHost.dispatchEvent(e);throw new Error(`Invalid event type ${e.type}.`)}{const t=e.value;this.callback(t)}return!1}}}update(e){var t,i;(!this.isFirstUpdate||(this.isFirstUpdate=!1,function(e){return 0===Object.keys(e).length}(e)||function(e,t){return 0===t.length||t.some(t=>!n(e[t]))}(e,this.dynamicParamsNames)))&&((n(this.currentConfig)||(t=e,i=this.currentConfig,this.dynamicParamsNames.some(e=>t[e]!==i[e])))&&(this.currentConfig=e,c.call(this.configuring,t=>{t.call(void 0,e)})))}connect(){c.call(this.connecting,e=>e.call(void 0))}disconnect(){c.call(this.disconnecting,e=>e.call(void 0))}}e.ValueChangedEvent=t,e.WireAdapter=l,e.register=function(e,t){if(null==e||!s(e))throw new TypeError("adapter id must be extensible");if("function"!=typeof t)throw new TypeError("adapter factory must be a callable");if("adapter"in e)throw new TypeError("adapter id is already associated to an adapter factory");const n=class extends l{constructor(e){super(e),t(this.eventTarget)}};i(n),i(n.prototype),r(e,"adapter",{writable:!1,configurable:!1,value:n})},e.registerWireService=function(){},Object.defineProperty(e,"__esModule",{value:!0})}));
